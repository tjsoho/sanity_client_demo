{"version":3,"file":"PostMessagePreviewSnapshots.cjs","sources":["../../src/editor/PostMessagePreviewSnapshots.tsx"],"sourcesContent":["import type {ClientPerspective} from '@sanity/client'\nimport {memo, useEffect, useMemo, type FC} from 'react'\nimport {\n  combineLatest,\n  debounceTime,\n  merge,\n  NEVER,\n  share,\n  skipWhile,\n  Subject,\n  switchMap,\n  takeUntil,\n} from 'rxjs'\nimport {getDraftId, getPublishedId} from 'sanity'\nimport {useDocumentPreviewStore, useSchema, type PreviewValue} from '../internals'\nimport type {VisualEditingConnection} from '../types'\n\ntype Ref = {\n  _id: string\n  _type: string\n}\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n  perspective: ClientPerspective\n  refs: Ref[]\n}\n\nconst PostMessagePreviews: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink, refs, perspective} = props\n  const documentPreviewStore = useDocumentPreviewStore()\n  const schema = useSchema()\n\n  const refsSubject = useMemo(() => new Subject<Ref[]>(), [])\n\n  const previews$ = useMemo(() => {\n    return refsSubject.asObservable().pipe(\n      switchMap((refs) => {\n        return combineLatest(\n          refs.map((ref) => {\n            const draftRef = {...ref, _id: getDraftId(ref._id)}\n            const draft$ =\n              perspective === 'previewDrafts'\n                ? documentPreviewStore\n                    .observeForPreview(draftRef, schema.get(draftRef._type)!)\n                    .pipe(\n                      // Share to prevent double subscribe in the merge\n                      share(),\n                      // Don't emit if no snapshot is returned\n                      skipWhile((p) => p.snapshot === null),\n                    )\n                : // Don't emit if not displaying drafts\n                  NEVER\n\n            const publishedRef = {...ref, _id: getPublishedId(ref._id)}\n            const published$ = documentPreviewStore.observeForPreview(\n              publishedRef,\n              schema.get(publishedRef._type)!,\n            )\n\n            return merge(published$.pipe(takeUntil(draft$)), draft$)\n          }),\n        )\n      }),\n      debounceTime(0),\n    )\n  }, [documentPreviewStore, refsSubject, schema, perspective])\n\n  useEffect(() => {\n    const sub = previews$.subscribe((snapshots) => {\n      comlink.post({\n        type: 'presentation/preview-snapshots',\n        data: {\n          snapshots: snapshots\n            .filter((s) => s.snapshot)\n            .map((s) => {\n              const snapshot = s.snapshot as PreviewValue & {_id: string}\n              return {...snapshot, _id: getPublishedId(snapshot._id)}\n            }),\n        },\n      })\n    })\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [comlink, previews$])\n\n  useEffect(() => {\n    refsSubject.next(refs)\n  }, [refs, refsSubject])\n\n  return null\n}\n\nexport default memo(PostMessagePreviews)\n"],"names":["useDocumentPreviewStore","useSchema","useMemo","Subject","switchMap","refs","combineLatest","getDraftId","share","skipWhile","NEVER","getPublishedId","merge","takeUntil","debounceTime","useEffect","memo"],"mappings":";;AA4BA,MAAM,sBAAoD,CAAC,UAAU;AAC7D,QAAA,EAAC,SAAS,MAAM,YAAW,IAAI,OAC/B,uBAAuBA,OAAwB,wBAAA,GAC/C,SAASC,iBAET,GAAA,cAAcC,MAAAA,QAAQ,MAAM,IAAIC,aAAe,GAAG,EAAE,GAEpD,YAAYD,MAAAA,QAAQ,MACjB,YAAY,aAAA,EAAe;AAAA,IAChCE,KAAA,UAAU,CAACC,UACFC,KAAA;AAAA,MACLD,MAAK,IAAI,CAAC,QAAQ;AACV,cAAA,WAAW,EAAC,GAAG,KAAK,KAAKE,OAAAA,WAAW,IAAI,GAAG,EAAC,GAC5C,SACJ,gBAAgB,kBACZ,qBACG,kBAAkB,UAAU,OAAO,IAAI,SAAS,KAAK,CAAE,EACvD;AAAA;AAAA,UAECC,WAAM;AAAA;AAAA,UAENC,KAAAA,UAAU,CAAC,MAAM,EAAE,aAAa,IAAI;AAAA,QACtC;AAAA;AAAA,UAEFC,KAAA;AAAA,WAEA,eAAe,EAAC,GAAG,KAAK,KAAKC,OAAAA,eAAe,IAAI,GAAG,EAAA,GACnD,aAAa,qBAAqB;AAAA,UACtC;AAAA,UACA,OAAO,IAAI,aAAa,KAAK;AAAA,QAAA;AAG/B,eAAOC,KAAAA,MAAM,WAAW,KAAKC,eAAU,MAAM,CAAC,GAAG,MAAM;AAAA,MAAA,CACxD;AAAA,IAAA,CAEJ;AAAA,IACDC,KAAAA,aAAa,CAAC;AAAA,KAEf,CAAC,sBAAsB,aAAa,QAAQ,WAAW,CAAC;AAE3D,SAAAC,MAAA,UAAU,MAAM;AACd,UAAM,MAAM,UAAU,UAAU,CAAC,cAAc;AAC7C,cAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,MAAM;AAAA,UACJ,WAAW,UACR,OAAO,CAAC,MAAM,EAAE,QAAQ,EACxB,IAAI,CAAC,MAAM;AACV,kBAAM,WAAW,EAAE;AACnB,mBAAO,EAAC,GAAG,UAAU,KAAKJ,OAAe,eAAA,SAAS,GAAG;UAAC,CACvD;AAAA,QACL;AAAA,MAAA,CACD;AAAA,IAAA,CACF;AAED,WAAO,MAAM;AACX,UAAI,YAAY;AAAA,IAAA;AAAA,KAEjB,CAAC,SAAS,SAAS,CAAC,GAEvBI,gBAAU,MAAM;AACd,gBAAY,KAAK,IAAI;AAAA,EACpB,GAAA,CAAC,MAAM,WAAW,CAAC,GAEf;AACT;AAEA,IAAeC,8BAAAA,MAAAA,KAAK,mBAAmB;;"}