import { jsx } from "react/jsx-runtime";
import isEqual from "fast-deep-equal";
import { createContext, useContext, useCallback, useEffect } from "react";
const Context = createContext(null);
function DisplayedDocumentBroadcasterProvider(props) {
  const { children, setDisplayedDocument, documentId } = props, context = useCallback(
    (next) => setDisplayedDocument((prev) => isEqual(prev, next) ? prev : next),
    [setDisplayedDocument]
  );
  return useEffect(() => {
    if (documentId)
      return;
    const timeout = setTimeout(() => setDisplayedDocument(null));
    return () => clearTimeout(timeout);
  }, [documentId, setDisplayedDocument]), /* @__PURE__ */ jsx(Context.Provider, { value: context, children });
}
function useDisplayedDocumentBroadcaster() {
  return useContext(Context);
}
export {
  DisplayedDocumentBroadcasterProvider,
  useDisplayedDocumentBroadcaster
};
//# sourceMappingURL=DisplayedDocumentBroadcaster.js.map
