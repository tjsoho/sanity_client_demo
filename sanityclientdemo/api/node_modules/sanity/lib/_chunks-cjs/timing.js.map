{"version":3,"file":"timing.js","sources":["../../src/_internal/cli/util/timing.ts"],"sourcesContent":["import {performance} from 'node:perf_hooks'\n\nexport interface TimeMeasurer {\n  start: (name: string) => void\n  end: (name: string) => number\n  getTimings: () => Record<string, number>\n}\n\nexport function getTimer(): TimeMeasurer {\n  const timings: Record<string, number> = {}\n  const startTimes: Record<string, number> = {}\n\n  function start(name: string): void {\n    if (typeof startTimes[name] !== 'undefined') {\n      throw new Error(`Timer \"${name}\" already started, cannot overwrite`)\n    }\n\n    startTimes[name] = performance.now()\n  }\n\n  function end(name: string): number {\n    if (typeof startTimes[name] === 'undefined') {\n      throw new Error(`Timer \"${name}\" never started, cannot end`)\n    }\n\n    timings[name] = performance.now() - startTimes[name]\n    return timings[name]\n  }\n\n  return {start, end, getTimings: () => timings}\n}\n"],"names":["performance"],"mappings":";;AAQO,SAAS,WAAyB;AACvC,QAAM,UAAkC,CAAA,GAClC,aAAqC;AAE3C,WAAS,MAAM,MAAoB;AAC7B,QAAA,OAAO,WAAW,IAAI,IAAM;AAC9B,YAAM,IAAI,MAAM,UAAU,IAAI,qCAAqC;AAG1D,eAAA,IAAI,IAAIA,gBAAA,YAAY,IAAI;AAAA,EACrC;AAEA,WAAS,IAAI,MAAsB;AAC7B,QAAA,OAAO,WAAW,IAAI,IAAM;AAC9B,YAAM,IAAI,MAAM,UAAU,IAAI,6BAA6B;AAGrD,WAAA,QAAA,IAAI,IAAIA,gBAAAA,YAAY,IAAA,IAAQ,WAAW,IAAI,GAC5C,QAAQ,IAAI;AAAA,EACrB;AAEA,SAAO,EAAC,OAAO,KAAK,YAAY,MAAM,QAAO;AAC/C;;"}