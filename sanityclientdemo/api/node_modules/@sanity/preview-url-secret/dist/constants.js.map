{"version":3,"file":"constants.js","sources":["../src/constants.ts"],"sourcesContent":["import type {\n  PreviewUrlSecretSchemaIdPrefix,\n  PreviewUrlSecretSchemaType,\n  PreviewUrlSecretSchemaTypeSingleton,\n} from './types'\n\n/** @internal */\nexport const schemaType = 'sanity.previewUrlSecret' satisfies PreviewUrlSecretSchemaType\n\n/** @internal */\nexport const schemaIdPrefix = 'sanity-preview-url-secret' satisfies PreviewUrlSecretSchemaIdPrefix\n\n/** @internal */\nexport const schemaIdSingleton = `${schemaIdPrefix}.share-access` as const\n\n/** @internal */\nexport const schemaTypeSingleton =\n  'sanity.previewUrlShareAccess' satisfies PreviewUrlSecretSchemaTypeSingleton\n\n/** @internal */\nexport const apiVersion = '2023-11-09'\n\n/** @internal */\nexport const urlSearchParamPreviewSecret = 'sanity-preview-secret'\n\n/** @internal */\nexport const urlSearchParamPreviewPathname = 'sanity-preview-pathname'\n\n/** @internal */\nexport const urlSearchParamPreviewPerspective = 'sanity-preview-perspective'\n\n/** @internal */\nexport const isDev = process.env.NODE_ENV === 'development'\n\n/**\n * updated within the hour, if it's older it'll create a new secret or return null\n * @internal\n */\nexport const SECRET_TTL = 60 * 60\n\n/** @internal */\nexport const fetchSecretQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n    _id,\n    _updatedAt,\n    secret,\n    studioUrl,\n  }` as const\n\n/** @internal */\nexport const fetchSharedAccessQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\"][0].secret` as const\n\n/** @internal */\nexport const fetchSharedAccessSecretQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\" && secret == $secret][0]{\n  secret,\n  studioUrl,\n}` as const\n\n/** @internal */\nexport const deleteExpiredSecretsQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]` as const\n\n/**\n * Used for tagging `client.fetch` queries\n * @internal\n */\nexport const tag = 'sanity.preview-url-secret' as const\n\n/** @internal */\nexport const perspectiveCookieName = 'sanity-preview-perspective'\n"],"names":[],"mappings":"AAOO,MAAM,UAAa,GAAA,0BAAA;AAGnB,MAAM,cAAiB,GAAA,4BAAA;AAGjB,MAAA,iBAAA,GAAoB,GAAG,cAAc,CAAA,aAAA,EAAA;AAG3C,MAAM,mBACX,GAAA,+BAAA;AAGK,MAAM,UAAa,GAAA,aAAA;AAGnB,MAAM,2BAA8B,GAAA,wBAAA;AAGpC,MAAM,6BAAgC,GAAA,0BAAA;AAGtC,MAAM,gCAAmC,GAAA,6BAAA;AAGnC,MAAA,KAAA,GAAQ,OAAQ,CAAA,GAAA,CAAI,QAAa,KAAA,cAAA;AAMvC,MAAM,aAAa,EAAK,GAAA,GAAA;AAGlB,MAAA,gBAAA;AAAA;AAAA,EACA,CAAA,YAAA,EAAe,UAAU,CAAA,mEAAA,EAAsE,UAAU,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,CAAA;AAAA,EAAA;AAQzG,MAAA,sBAAA;AAAA;AAAA,EACA,CAAA,UAAA,EAAa,iBAAiB,CAAA,eAAA,EAAkB,mBAAmB,CAAA,YAAA,CAAA;AAAA,EAAA;AAGnE,MAAA,4BAAA;AAAA;AAAA,EACA,CAAA,UAAA,EAAa,iBAAiB,CAAA,eAAA,EAAkB,mBAAmB,CAAA;AAAA;AAAA;AAAA,CAAA,CAAA;AAAA,EAAA;AAMnE,MAAA,yBAAA;AAAA;AAAA,EACA,CAAA,YAAA,EAAe,UAAU,CAAA,+CAAA,EAAkD,UAAU,CAAA,CAAA,CAAA;AAAA,EAAA;AAM3F,MAAM,GAAM,GAAA,4BAAA;AAGZ,MAAM,qBAAwB,GAAA;;;;"}