import {
  Card,
  Container,
  Heading,
  Stack,
  Text
} from "./chunk-57Z3M6EV.js";
import "./chunk-J4LECHB7.js";
import {
  require_jsx_runtime
} from "./chunk-H7D7XHLF.js";
import {
  require_react
} from "./chunk-ODS22EN7.js";
import {
  __publicField,
  __toESM
} from "./chunk-ZB72733A.js";

// node_modules/sanity/lib/_chunks-es/ViteDevServerStopped.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react = __toESM(require_react(), 1);
var ERROR_TITLE = "Dev server stopped";
var ERROR_DESCRIPTION = "The development server has stopped. You may need to restart it to continue working.";
var ViteDevServerStoppedError = class extends Error {
  constructor() {
    super(ERROR_TITLE);
    __publicField(this, "ViteDevServerStoppedError");
    this.name = "ViteDevServerStoppedError", this.ViteDevServerStoppedError = true;
  }
};
var serverHot = import.meta.hot;
var isViteServer = (hot) => !!hot;
var useDetectViteDevServerStopped = () => {
  const [devServerStopped, setDevServerStopped] = (0, import_react.useState)(false), markDevServerStopped = (0, import_react.useCallback)(() => setDevServerStopped(true), []);
  return (0, import_react.useEffect)(() => {
    isViteServer(serverHot) && serverHot.on("vite:ws:disconnect", markDevServerStopped);
  }, [markDevServerStopped]), { devServerStopped };
};
var ThrowViteServerStopped = () => {
  const { devServerStopped } = useDetectViteDevServerStopped();
  if (devServerStopped)
    throw new ViteDevServerStoppedError();
  return null;
};
var DetectViteDevServerStopped = () => isViteServer(serverHot) ? (0, import_jsx_runtime.jsx)(ThrowViteServerStopped, {}) : null;
var DevServerStoppedErrorScreen = () => (0, import_jsx_runtime.jsx)(
  Card,
  {
    height: "fill",
    overflow: "auto",
    paddingY: [4, 5, 6, 7],
    paddingX: 4,
    sizing: "border",
    tone: "critical",
    children: (0, import_jsx_runtime.jsx)(Container, { width: 3, children: (0, import_jsx_runtime.jsxs)(Stack, { space: 4, children: [
      (0, import_jsx_runtime.jsx)(Heading, { children: ERROR_TITLE }),
      (0, import_jsx_runtime.jsx)(Card, { border: true, radius: 2, overflow: "auto", padding: 4, tone: "inherit", children: (0, import_jsx_runtime.jsx)(Stack, { space: 4, children: (0, import_jsx_runtime.jsx)(Text, { size: 2, children: ERROR_DESCRIPTION }) }) })
    ] }) })
  }
);
export {
  DetectViteDevServerStopped,
  DevServerStoppedErrorScreen
};
//# sourceMappingURL=ViteDevServerStopped-ASL2HLRK.js.map
